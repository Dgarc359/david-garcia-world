"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[896],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=r.createContext({}),l=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(i.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(t),m=o,b=p["".concat(i,".").concat(m)]||p[m]||d[m]||s;return t?r.createElement(b,a(a({ref:n},u),{},{components:t})):r.createElement(b,a({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=t.length,a=new Array(s);a[0]=p;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<s;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},4180:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var r=t(7462),o=(t(7294),t(3905));const s={},a=void 0,c={unversionedId:"General/Text-Editors/vscode/Environments/sst-debug-launch.json",id:"General/Text-Editors/vscode/Environments/sst-debug-launch.json",title:"sst-debug-launch.json",description:"",source:"@site/docs/General/Text-Editors/vscode/Environments/sst-debug-launch.json.md",sourceDirName:"General/Text-Editors/vscode/Environments",slug:"/General/Text-Editors/vscode/Environments/sst-debug-launch.json",permalink:"/book/index.html/docs/General/Text-Editors/vscode/Environments/sst-debug-launch.json",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/General/Text-Editors/vscode/Environments/sst-debug-launch.json.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"vscode",permalink:"/book/index.html/docs/General/Text-Editors/vscode/"},next:{title:"SST debug env example",permalink:"/book/index.html/docs/General/Text-Editors/vscode/Environments/sst-debug"}},i={},l=[],u={toc:l};function d(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'// ./.vscode/launch.json\n{\n    "version": "0.2.0",\n    "configurations": [\n      {\n        "name": "Debug SST Start",\n        "type": "node",\n        "request": "launch",\n        "runtimeExecutable": "${workspaceRoot}/node_modules/.bin/sst",\n        "runtimeArgs": ["start", "--increase-timeout"],\n        "console": "integratedTerminal",\n        "skipFiles": ["<node_internals>/**"]\n      },\n      {\n        "name": "Debug SST Tests",\n        "type": "node",\n        "request": "launch",\n        "runtimeExecutable": "${workspaceRoot}/node_modules/.bin/sst",\n        "args": ["test", "--runInBand", "--no-cache", "--watchAll=false"],\n        "cwd": "${workspaceRoot}",\n        "protocol": "inspector",\n        "console": "integratedTerminal",\n        "internalConsoleOptions": "neverOpen",\n        "env": { "CI": "true" },\n        "disableOptimisticBPs": true\n      }\n    ]\n  }\n')))}d.isMDXComponent=!0}}]);