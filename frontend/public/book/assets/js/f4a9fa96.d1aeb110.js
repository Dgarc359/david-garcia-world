"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2260],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>p});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),u=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(a),p=n,y=d["".concat(s,".").concat(p)]||d[p]||m[p]||o;return a?r.createElement(y,l(l({ref:t},c),{},{components:a})):r.createElement(y,l({ref:t},c))}));function p(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var u=2;u<o;u++)l[u]=a[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},2959:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var r=a(7462),n=(a(7294),a(3905));const o={},l=void 0,i={unversionedId:"General/Random/Monitoring-Tools/Sumo-Logic/search-query",id:"General/Random/Monitoring-Tools/Sumo-Logic/search-query",title:"search-query",description:"Search Query Notes",source:"@site/docs/General/Random/Monitoring-Tools/Sumo-Logic/search-query.md",sourceDirName:"General/Random/Monitoring-Tools/Sumo-Logic",slug:"/General/Random/Monitoring-Tools/Sumo-Logic/search-query",permalink:"/book/index.html/docs/General/Random/Monitoring-Tools/Sumo-Logic/search-query",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/General/Random/Monitoring-Tools/Sumo-Logic/search-query.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"math",permalink:"/book/index.html/docs/General/Random/Maths/math"},next:{title:"sumo",permalink:"/book/index.html/docs/General/Random/Monitoring-Tools/Sumo-Logic/sumo"}},s={},u=[{value:"Search Query Notes",id:"search-query-notes",level:2},{value:"Syntax",id:"syntax",level:4},{value:"Required and Optional arguments",id:"required-and-optional-arguments",level:4},{value:"parseDate",id:"parsedate",level:4},{value:"timeslice",id:"timeslice",level:4},{value:"If statement",id:"if-statement",level:4},{value:"Example with breakdown by line",id:"example-with-breakdown-by-line",level:4},{value:"Metadata Fields",id:"metadata-fields",level:4}],c={toc:u};function m(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"search-query-notes"},"Search Query Notes"),(0,n.kt)("hr",null),(0,n.kt)("h4",{id:"syntax"},"Syntax"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"metadata tags + keywords\n| parse\n| filter\n| aggregate\n| format display\n")),(0,n.kt)("h4",{id:"required-and-optional-arguments"},"Required and Optional arguments"),(0,n.kt)("p",null,"Required argument: ",(0,n.kt)("inlineCode",{parentName:"p"},"< >"),"\nOptional argument: ",(0,n.kt)("inlineCode",{parentName:"p"},"[ ]")),(0,n.kt)("h4",{id:"parsedate"},"parseDate"),(0,n.kt)("p",null,"The parseDate operator extracts a date or time from a string and provides a timestamp in milliseconds.\xa0To convert an epoch timestamp in a human-readable format, use the\xa0formatDate operator."),(0,n.kt)("h4",{id:"timeslice"},"timeslice"),(0,n.kt)("p",null,"The ",(0,n.kt)("strong",{parentName:"p"},"timeslice")," operator segregates data by time period, so you can create bucketed results based on a fixed interval (for example, five-minute buckets). Timeslice also supports creating a fixed-target number of buckets, for example, 150 buckets over the last 60 minutes."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'timeslice 1d  \n| formatDate(_timeslice,"MM-01-yyyy") as month  \n| parseDate(month,"MM-dd-yyyy") as _timeslice\xa0  \n| <aggregating_operator> by _timeslice\n')),(0,n.kt)("p",null,"Example"),(0,n.kt)("h4",{id:"if-statement"},"If statement"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"if(<condition>, <value_if_true>, <value_if_false>) as <field>")),(0,n.kt)("h4",{id:"example-with-breakdown-by-line"},"Example with breakdown by line"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'sourceCategory=Apache/Access and ("/blog")\n| parse "* - - [" as src_ip\n| where !(src_ip matches "46.*")\n| count by src_ip\n| sort by _count desc\n| limit 10\n')),(0,n.kt)("ol",null,(0,n.kt)("li",null," Metadata and Keywords "),(0,n.kt)("li",null," Parse data based off glob pattern ' * - - [ ' then, store it in field 'src_ip'"),(0,n.kt)("li",null," Exclude anything that start with 46 "),(0,n.kt)("li",null," count by the field src_ip "),(0,n.kt)("li",null," sort "),(0,n.kt)("li",null," limit ")),(0,n.kt)("hr",null),(0,n.kt)("h4",{id:"metadata-fields"},"Metadata Fields"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"_","collector"),(0,n.kt)("td",{parentName:"tr",align:null},"Name of Collector")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"_","source"),(0,n.kt)("td",{parentName:"tr",align:null},"Name of Source defined during configuration")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"_","sourceHost"),(0,n.kt)("td",{parentName:"tr",align:null},"Hostname where the source exists")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"_","sourceName"),(0,n.kt)("td",{parentName:"tr",align:null},"Name of log file (including path)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"_","sourceCategory"),(0,n.kt)("td",{parentName:"tr",align:null},"Category designation associated with message")))))}m.isMDXComponent=!0}}]);